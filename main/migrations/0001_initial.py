# Generated by Django 3.1 on 2020-09-19 15:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(blank=True, default='Иванович', max_length=16, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(blank=True, choices=[('Женский', 'Женский'), ('Мужской', 'Мужской')], max_length=7, null=True, verbose_name='Пол')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='Адрес')),
                ('phone', models.IntegerField(blank=True, null=True, verbose_name='Телефон')),
                ('is_archived', models.BooleanField(blank=True, default=False, verbose_name='В архиве')),
                ('profile_icon', models.ImageField(blank=True, null=True, upload_to='profile_icon', verbose_name='Фото профиля')),
                ('type', models.CharField(choices=[('Сотрудник', 'Сотрудник'), ('Студент', 'Студент'), ('Родитель', 'Родитель')], default='Сотрудник', max_length=50, verbose_name='Тип')),
                ('theme', models.CharField(choices=[('theme_light', 'Светлая тема'), ('theme_dark', 'Тёмная тема')], default='theme_light', max_length=64, verbose_name='Тема оформления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('has_groups', 'Имеет группы'), ('edit_any_studySession', 'Редактирует любые занятия'), ('cancel_studySession', 'Отменяет занятия')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Название')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Педагог')),
            ],
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='Название')),
                ('link', models.ImageField(upload_to='logo', verbose_name='Иконка')),
            ],
        ),
        migrations.CreateModel(
            name='Union',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='No name', max_length=64, verbose_name='Название')),
                ('occupationReason', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Причина занятости')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.logo', verbose_name='Лого')),
            ],
        ),
        migrations.CreateModel(
            name='TimetableElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginTime', models.TimeField(verbose_name='Время начала')),
                ('endTime', models.TimeField(blank=True, default='00:00:00', verbose_name='Время конца')),
                ('day', models.CharField(choices=[('ПН', 'Понедельник'), ('ВТ', 'Вторник'), ('СР', 'Среда'), ('ЧТ', 'Четверг'), ('ПТ', 'Пятница'), ('СБ', 'Суббота')], max_length=2, verbose_name='День')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.group', verbose_name='Группа')),
            ],
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата и время начала')),
                ('teacherAttended', models.BooleanField(blank=True, default=True, verbose_name='Педагог был на занятии')),
                ('cancelReason', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='Причина отмены')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.group', verbose_name='Группа')),
            ],
        ),
        migrations.CreateModel(
            name='ParentMore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='union',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.union', verbose_name='Объединение'),
        ),
        migrations.CreateModel(
            name='EmployeeMore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('union', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.union', verbose_name='Объединение')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
        ),
        migrations.CreateModel(
            name='StudentMore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(blank=True, max_length=32, null=True, verbose_name='Школа')),
                ('grade', models.CharField(blank=True, max_length=3, null=True, verbose_name='Класс')),
                ('groups', models.ManyToManyField(blank=True, related_name='students', to='main.Group', verbose_name='Ученики')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parents', models.ManyToManyField(blank=True, related_name='childs', to='main.Parent', verbose_name='Родители')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='main.student', verbose_name='Студент')),
            ],
        ),
        migrations.CreateModel(
            name='Attending',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAttend', models.BooleanField(default=False, verbose_name='Посетил')),
                ('studySession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.studysession', verbose_name='Занятие')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student', verbose_name='Студент')),
            ],
        ),
    ]
